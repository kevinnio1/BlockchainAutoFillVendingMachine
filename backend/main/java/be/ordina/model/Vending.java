package be.ordina.model;

import java.lang.String;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.concurrent.Future;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.<br>
 * <strong>Do not modify!</strong><br>
 * Please use {@link org.web3j.codegen.SolidityFunctionWrapperGenerator} to update.
 *
 * <p>Generated with web3j version 2.1.0.
 */
public final class Vending extends Contract {
    private static final String BINARY = "606060405234156200000d57fe5b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506032600481905550600a60058190555060045460068190555060146001819055506200008f336200010e6401000000000262000415176401000000009004565b600860008154809291906001019190505550600a8054806001018281620000b7919062000226565b916000526020600020900160005b33909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b6200027d565b6000600090505b600980549050811015620001a9578173ffffffffffffffffffffffffffffffffffffffff166009828154811015156200014a57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200019a5760006000fd5b5b808060010191505062000115565b60098054806001018281620001bf919062000226565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506007600081548092919060010191905055505b5050565b81548183558181151162000250578183600052602060002091820191016200024f919062000255565b5b505050565b6200027a91905b80821115620002765760008160009055506001016200025c565b5090565b90565b612c0f806200028d6000396000f30060606040523615610105576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a3b0a4f1461011b578063168ae483146101515780631785f53c146101875780631b9265b8146101bd5780632538ff6f146101df57806329092d0e146101ff5780633be32f7d14610235578063403037341461024757806341c0e1b5146102675780634f8ced30146102795780635ae0dfe31461029f57806370480275146102c5578063863dac41146102fb57806391b7f5ed14610327578063bdf3c4ae14610347578063d67476eb1461036d578063dde2853e14610393578063e5c42fd1146103b9578063f2020275146103ef575b341561010d57fe5b6101195b60006000fd5b565b005b341561012357fe5b61014f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610415565b005b341561015957fe5b610185600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610527565b005b341561018f57fe5b6101bb600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061066b565b005b6101c5610afc565b604051808215151515815260200191505060405180910390f35b34156101e757fe5b6101fd6004808035906020019091905050610fe6565b005b341561020757fe5b610233600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111b0565b005b341561023d57fe5b610245611641565b005b341561024f57fe5b6102656004808035906020019091905050611dde565b005b341561026f57fe5b610277611fa8565b005b341561028157fe5b610289612081565b6040518082815260200191505060405180910390f35b34156102a757fe5b6102af612087565b6040518082815260200191505060405180910390f35b34156102cd57fe5b6102f9600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061208d565b005b610311600480803590602001909190505061243c565b6040518082815260200191505060405180910390f35b341561032f57fe5b610345600480803590602001909190505061285c565b005b341561034f57fe5b610357612903565b6040518082815260200191505060405180910390f35b341561037557fe5b61037d612909565b6040518082815260200191505060405180910390f35b341561039b57fe5b6103a361290f565b6040518082815260200191505060405180910390f35b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612915565b005b34156103f757fe5b6103ff612a19565b6040518082815260200191505060405180910390f35b6000600090505b6009805490508110156104ac578173ffffffffffffffffffffffffffffffffffffffff1660098281548110151561044f57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561049e5760006000fd5b5b808060010191505061041c565b600980548060010182816104c09190612b92565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506007600081548092919060010191905055505b5050565b3373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106235780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156106675760006000fd5b5b50565b6000600a8054806020026020016040519081016040528092919081815260200182805480156106ef57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106a5575b50505050506000600090505b81518110156108e8573373ffffffffffffffffffffffffffffffffffffffff16828281518110151561072957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614156108da57600092505b600a805490508310156108d4578373ffffffffffffffffffffffffffffffffffffffff16600a8481548110151561078757fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108c657600a6001600a80549050038154811015156107e757fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600a8481548110151561083957fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600a6001600a805490500381548110151561087f57fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600860008154809291906001900391905055506108d4565b5b8280600101935050610754565b5b610af6565b5b80806001019150506106fb565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610aa757600092505b600a80549050831015610aa1578373ffffffffffffffffffffffffffffffffffffffff16600a8481548110151561095457fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a9357600a6001600a80549050038154811015156109b457fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600a84815481101515610a0657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600a6001600a8054905003815481101515610a4c57fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560086000815480929190600190039190505550610aa1565b5b8280600101935050610921565b5b610af6565b6000341115610af5573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f193505050501515610af45760006000fd5b5b5b50505050565b6000600060006009805480602002602001604051908101604052809291908181526020018280548015610b8457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b3a575b50505050506000600090505b8151811015610da7573373ffffffffffffffffffffffffffffffffffffffff168282815181101515610bbe57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415610d995733935060006006541315610d8d5766038d7ea4c6800060015402341115610c5e5766038d7ea4c6800060015402340392508373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051809050600060405180830381858888f193505050501515610c595760006000fd5b610cbb565b66038d7ea4c6800060015402341015610cba578373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015610cb45760006000fd5b60006000fd5b5b600454600654141515610cd157610cd0612a1f565b5b600660008154809291906001900391905055506005546006541415610d84573073ffffffffffffffffffffffffffffffffffffffff1663863dac41600654600454036000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1515610d6a57fe5b6102c65a03f11515610d7857fe5b50505060405180519050505b60019450610d94565b60006000fd5b5b610fdf565b5b8080600101915050610b90565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f905733935060006006541315610f845766038d7ea4c6800060015402341115610e555766038d7ea4c6800060015402340392508373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051809050600060405180830381858888f193505050501515610e505760006000fd5b610eb2565b66038d7ea4c6800060015402341015610eb1578373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015610eab5760006000fd5b60006000fd5b5b600454600654141515610ec857610ec7612a1f565b5b600660008154809291906001900391905055506005546006541415610f7b573073ffffffffffffffffffffffffffffffffffffffff1663863dac41600654600454036000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1515610f6157fe5b6102c65a03f11515610f6f57fe5b50505060405180519050505b60019450610f8b565b60006000fd5b5b610fdf565b6000341115610fde573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f193505050501515610fdd5760006000fd5b5b5b5050505090565b600a80548060200260200160405190810160405280929190818152602001828054801561106857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161101e575b50505050506000600090505b81518110156110ff573373ffffffffffffffffffffffffffffffffffffffff1682828151811015156110a257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614156110f1578260045412806110d9575082600654125b156110e45760006000fd5b826005819055505b6111ab565b5b8080600101915050611074565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561115c57826004541280611144575082600654125b1561114f5760006000fd5b826005819055505b6111ab565b60003411156111aa573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156111a95760006000fd5b5b5b505050565b6000600a80548060200260200160405190810160405280929190818152602001828054801561123457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116111ea575b50505050506000600090505b815181101561142d573373ffffffffffffffffffffffffffffffffffffffff16828281518110151561126e57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141561141f57600092505b600980549050831015611419578373ffffffffffffffffffffffffffffffffffffffff166009848154811015156112cc57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561140b57600960016009805490500381548110151561132c57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660098481548110151561137e57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16505060096001600980549050038154811015156113c457fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560076000815480929190600190039190505550611419565b5b8280600101935050611299565b5b61163b565b5b8080600101915050611240565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156115ec57600092505b6009805490508310156115e6578373ffffffffffffffffffffffffffffffffffffffff1660098481548110151561149957fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156115d85760096001600980549050038154811015156114f957fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660098481548110151561154b57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600960016009805490500381548110151561159157fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600760008154809291906001900391905055506115e6565b5b8280600101935050611466565b5b61163b565b600034111561163a573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156116395760006000fd5b5b5b50505050565b6000600060098054806020026020016040519081016040528092919081815260200182805480156116c757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161167d575b50505050506000600090505b8151811015611a45573373ffffffffffffffffffffffffffffffffffffffff16828281518110151561170157fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415611a3757600093505b6009805490508410156118ac573373ffffffffffffffffffffffffffffffffffffffff1660098581548110151561175f57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561189e5760096001600980549050038154811015156117bf57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660098581548110151561181157fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600960016009805490500381548110151561185757fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600760008154809291906001900391905055506118ac565b5b838060010194505061172c565b600092505b600a80549050831015611a31573373ffffffffffffffffffffffffffffffffffffffff16600a848154811015156118e457fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611a2357600a6001600a805490500381548110151561194457fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600a8481548110151561199657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600a6001600a80549050038154811015156119dc57fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560086000815480929190600190039190505550611a31565b5b82806001019350506118b1565b5b611dd8565b5b80806001019150506116d3565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611d8957600093505b600980549050841015611bfe573373ffffffffffffffffffffffffffffffffffffffff16600985815481101515611ab157fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611bf0576009600160098054905003815481101515611b1157fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600985815481101515611b6357fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1650506009600160098054905003815481101515611ba957fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560076000815480929190600190039190505550611bfe565b5b8380600101945050611a7e565b600092505b600a80549050831015611d83573373ffffffffffffffffffffffffffffffffffffffff16600a84815481101515611c3657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611d7557600a6001600a8054905003815481101515611c9657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600a84815481101515611ce857fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600a6001600a8054905003815481101515611d2e57fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560086000815480929190600190039190505550611d83565b5b8280600101935050611c03565b5b611dd8565b6000341115611dd7573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f193505050501515611dd65760006000fd5b5b5b50505050565b600a805480602002602001604051908101604052809291908181526020018280548015611e6057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e16575b50505050506000600090505b8151811015611ef7573373ffffffffffffffffffffffffffffffffffffffff168282815181101515611e9a57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415611ee957826006541380611ed1575082600554135b15611edc5760006000fd5b826004819055505b611fa3565b5b8080600101915050611e6c565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611f5457826006541380611f3c575082600554135b15611f475760006000fd5b826004819055505b611fa3565b6000341115611fa2573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f193505050501515611fa15760006000fd5b5b5b505050565b3373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561203a57600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f19350505050151561207e5760006000fd5b5b565b60045481565b60055481565b6000600a80548060200260200160405190810160405280929190818152602001828054801561211157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116120c7575b50505050506000600090505b8151811015612299573373ffffffffffffffffffffffffffffffffffffffff16828281518110151561214b57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141561228b5761217a84610415565b600092505b600a8054905083101561220f578373ffffffffffffffffffffffffffffffffffffffff16600a848154811015156121b257fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156122015760006000fd5b5b828060010193505061217f565b600a80548060010182816122239190612b92565b916000526020600020900160005b86909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506008600081548092919060010191905055505b612436565b5b808060010191505061211d565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156123e7576122d684610415565b600092505b600a8054905083101561236b578373ffffffffffffffffffffffffffffffffffffffff16600a8481548110151561230e57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561235d5760006000fd5b5b82806001019350506122db565b600a805480600101828161237f9190612b92565b916000526020600020900160005b86909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506008600081548092919060010191905055505b612436565b6000341115612435573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156124345760006000fd5b5b5b50505050565b6000600a8054806020026020016040519081016040528092919081815260200182805480156124c057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612476575b50505050506000600090505b8151811015612680573373ffffffffffffffffffffffffffffffffffffffff1682828151811015156124fa57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415612672576000841315801561253657506004548460065401135b156125415760006000fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c68000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634511c49a6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381600087803b151561261357fe5b6102c65a03f1151561262157fe5b505050604051805190500286029081150290604051809050600060405180830381858888f1935050505015156126575760006000fd5b8360066000828254019250508190555060065492505b612855565b5b80806001019150506124cc565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561280657600084131580156126ca57506004548460065401135b156126d55760006000fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c68000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634511c49a6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381600087803b15156127a757fe5b6102c65a03f115156127b557fe5b505050604051805190500286029081150290604051809050600060405180830381858888f1935050505015156127eb5760006000fd5b8360066000828254019250508190555060065492505b612855565b6000341115612854573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156128535760006000fd5b5b5b5050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156128bb57806001819055505b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156128ff5760006000fd5b5b50565b60065481565b60015481565b60085481565b3373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156129d157600b805480600101828161297f9190612b92565b916000526020600020900160005b83909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f193505050501515612a155760006000fd5b5b50565b60075481565b60006000600066038d7ea4c68000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634511c49a6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381600087803b1515612abb57fe5b6102c65a03f11515612ac957fe5b5050506040518051905060015403029250600b8054905083811515612aea57fe5b049150600090505b600b80549050811015612b8c57600b81815481101515612b0e57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051809050600060405180830381858888f193505050501515612b7e5760006000fd5b5b8080600101915050612af2565b5b505050565b815481835581811511612bb957818360005260206000209182019101612bb89190612bbe565b5b505050565b612be091905b80821115612bdc576000816000905550600101612bc4565b5090565b905600a165627a7a72305820b1b4885b8a85bb592ac90baa938cf0fd8d8ff8ccf44055df1ca4cf92b49c60e90029";

    private Vending(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    private Vending(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public Future<TransactionReceipt> add(Address user) {
        Function function = new Function("add", Arrays.<Type>asList(user), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> setSupplier(Address a) {
        Function function = new Function("setSupplier", Arrays.<Type>asList(a), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> removeAdmin(Address admin) {
        Function function = new Function("removeAdmin", Arrays.<Type>asList(admin), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> pay() {
        Function function = new Function("pay", Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> setMinStock(Int256 newStock) {
        Function function = new Function("setMinStock", Arrays.<Type>asList(newStock), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> remove(Address user) {
        Function function = new Function("remove", Arrays.<Type>asList(user), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> deleteAccount() {
        Function function = new Function("deleteAccount", Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> setMaxStock(Int256 newStock) {
        Function function = new Function("setMaxStock", Arrays.<Type>asList(newStock), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> kill() {
        Function function = new Function("kill", Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Int256> maxStock() {
        Function function = new Function("maxStock", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Int256> minStock() {
        Function function = new Function("minStock", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> addAdmin(Address admin) {
        Function function = new Function("addAdmin", Arrays.<Type>asList(admin), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> stockUp(Int256 amount) {
        Function function = new Function("stockUp", Arrays.<Type>asList(amount), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> setPrice(Uint256 newPrice) {
        Function function = new Function("setPrice", Arrays.<Type>asList(newPrice), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Int256> stock() {
        Function function = new Function("stock", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> finneyPrice() {
        Function function = new Function("finneyPrice", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Int256> adminUsers() {
        Function function = new Function("adminUsers", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> addStakeholder(Address stakeholder) {
        Function function = new Function("addStakeholder", Arrays.<Type>asList(stakeholder), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Int256> users() {
        Function function = new Function("users", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public static Future<Vending> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialValue) {
        return deployAsync(Vending.class, web3j, credentials, gasPrice, gasLimit, BINARY, "", initialValue);
    }

    public static Future<Vending> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialValue) {
        return deployAsync(Vending.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "", initialValue);
    }

    public static Vending load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Vending(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static Vending load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Vending(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
