package be.ordina.model;

import java.lang.String;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.concurrent.Future;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.<br>
 * <strong>Do not modify!</strong><br>
 * Please use {@link org.web3j.codegen.SolidityFunctionWrapperGenerator} to update.
 *
 * <p>Generated with web3j version 2.1.0.
 */
public final class Vending extends Contract {
    private static final String BINARY = "606060405234156200000d57fe5b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506032600481905550600a600581905550600454600681905550601460018190555073803e3a0c2bb93b5555f3313a55f6b0a51d52ff75600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073df7463670a2b873263cde76b2ab235dd0faf2515600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200013933620001f964010000000002620003eb176401000000009004565b600860008154809291906001019190505550600c805480600101828162000161919062000311565b916000526020600020900160005b33909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505030600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b62000368565b6000600090505b600b8054905081101562000294578173ffffffffffffffffffffffffffffffffffffffff16600b828154811015156200023557fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415620002855760006000fd5b5b808060010191505062000200565b600b8054806001018281620002aa919062000311565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506007600081548092919060010191905055505b5050565b8154818355818115116200033b578183600052602060002091820191016200033a919062000340565b5b505050565b6200036591905b808211156200036157600081600090555060010162000347565b5090565b90565b612a1480620003786000396000f300606060405236156100ef576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a3b0a4f146101055780631785f53c1461013b5780631b9265b8146101715780632538ff6f1461019357806329092d0e146101b35780633be32f7d146101e957806340303734146101fb57806341c0e1b51461021b57806367e404ce1461022d578063704802751461027f578063863dac41146102b557806391b7f5ed146102e1578063bdf3c4ae14610301578063c61845ae14610327578063d67476eb14610379578063dde2853e1461039f578063f2020275146103c5575b34156100f757fe5b6101035b60006000fd5b565b005b341561010d57fe5b610139600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506103eb565b005b341561014357fe5b61016f600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506104fd565b005b6101796109cf565b604051808215151515815260200191505060405180910390f35b341561019b57fe5b6101b16004808035906020019091905050610fea565b005b34156101bb57fe5b6101e7600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111f5565b005b34156101f157fe5b6101f96116c7565b005b341561020357fe5b6102196004808035906020019091905050611ea5565b005b341561022357fe5b61022b6120b0565b005b341561023557fe5b61023d612189565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561028757fe5b6102b3600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506121af565b005b6102cb600480803590602001909190505061259f565b6040518082815260200191505060405180910390f35b34156102e957fe5b6102ff60048080359060200190919050506128b2565b005b341561030957fe5b610311612959565b6040518082815260200191505060405180910390f35b341561032f57fe5b61033761295f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561038157fe5b610389612985565b6040518082815260200191505060405180910390f35b34156103a757fe5b6103af61298b565b6040518082815260200191505060405180910390f35b34156103cd57fe5b6103d5612991565b6040518082815260200191505060405180910390f35b6000600090505b600b80549050811015610482578173ffffffffffffffffffffffffffffffffffffffff16600b8281548110151561042557fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104745760006000fd5b5b80806001019150506103f2565b600b80548060010182816104969190612997565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506007600081548092919060010191905055505b5050565b6000600c80548060200260200160405190810160405280929190818152602001828054801561058157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610537575b5050505050600033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600090505b81518110156107bb573373ffffffffffffffffffffffffffffffffffffffff1682828151811015156105fc57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614156107ad57600092505b600c805490508310156107a7578373ffffffffffffffffffffffffffffffffffffffff16600c8481548110151561065a57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561079957600c6001600c80549050038154811015156106ba57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600c8481548110151561070c57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600c6001600c805490500381548110151561075257fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600860008154809291906001900391905055506107a7565b5b8280600101935050610627565b5b6109c9565b5b80806001019150506105ce565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561097a57600092505b600c80549050831015610974578373ffffffffffffffffffffffffffffffffffffffff16600c8481548110151561082757fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561096657600c6001600c805490500381548110151561088757fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600c848154811015156108d957fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600c6001600c805490500381548110151561091f57fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560086000815480929190600190039190505550610974565b5b82806001019350506107f4565b5b6109c9565b60003411156109c8573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156109c75760006000fd5b5b5b50505050565b600060006000600b805480602002602001604051908101604052809291908181526020018280548015610a5757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a0d575b5050505050600033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600090505b8151811015610d33573373ffffffffffffffffffffffffffffffffffffffff168282815181101515610ad257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415610d255733935060006006541315610d195766038d7ea4c6800060015402341115610b725766038d7ea4c6800060015402340392508373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051809050600060405180830381858888f193505050501515610b6d5760006000fd5b610bcf565b66038d7ea4c6800060015402341015610bce578373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015610bc85760006000fd5b60006000fd5b5b600454600654141515610c5d57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c680006064603260015402811515610c3157fe5b04029081150290604051809050600060405180830381858888f193505050501515610c5c5760006000fd5b5b600660008154809291906001900391905055506005546006541415610d10573073ffffffffffffffffffffffffffffffffffffffff1663863dac41600654600454036000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1515610cf657fe5b6102c65a03f11515610d0457fe5b50505060405180519050505b60019450610d20565b60006000fd5b5b610fe3565b5b8080600101915050610aa4565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f945733935060006006541315610f885766038d7ea4c6800060015402341115610de15766038d7ea4c6800060015402340392508373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051809050600060405180830381858888f193505050501515610ddc5760006000fd5b610e3e565b66038d7ea4c6800060015402341015610e3d578373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015610e375760006000fd5b60006000fd5b5b600454600654141515610ecc57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c680006064603260015402811515610ea057fe5b04029081150290604051809050600060405180830381858888f193505050501515610ecb5760006000fd5b5b600660008154809291906001900391905055506005546006541415610f7f573073ffffffffffffffffffffffffffffffffffffffff1663863dac41600654600454036000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1515610f6557fe5b6102c65a03f11515610f7357fe5b50505060405180519050505b60019450610f8f565b60006000fd5b5b610fe3565b6000341115610fe2573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f193505050501515610fe15760006000fd5b5b5b5050505090565b600c80548060200260200160405190810160405280929190818152602001828054801561106c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611022575b5050505050600033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600090505b8151811015611144573373ffffffffffffffffffffffffffffffffffffffff1682828151811015156110e757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614156111365782600454128061111e575082600654125b156111295760006000fd5b826005819055505b6111f0565b5b80806001019150506110b9565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156111a157826004541280611189575082600654125b156111945760006000fd5b826005819055505b6111f0565b60003411156111ef573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156111ee5760006000fd5b5b5b505050565b6000600c80548060200260200160405190810160405280929190818152602001828054801561127957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161122f575b5050505050600033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600090505b81518110156114b3573373ffffffffffffffffffffffffffffffffffffffff1682828151811015156112f457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614156114a557600092505b600b8054905083101561149f578373ffffffffffffffffffffffffffffffffffffffff16600b8481548110151561135257fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561149157600b6001600b80549050038154811015156113b257fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600b8481548110151561140457fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600b6001600b805490500381548110151561144a57fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556007600081548092919060019003919050555061149f565b5b828060010193505061131f565b5b6116c1565b5b80806001019150506112c6565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561167257600092505b600b8054905083101561166c578373ffffffffffffffffffffffffffffffffffffffff16600b8481548110151561151f57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561165e57600b6001600b805490500381548110151561157f57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600b848154811015156115d157fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600b6001600b805490500381548110151561161757fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556007600081548092919060019003919050555061166c565b5b82806001019350506114ec565b5b6116c1565b60003411156116c0573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156116bf5760006000fd5b5b5b50505050565b60006000600b80548060200260200160405190810160405280929190818152602001828054801561174d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611703575b5050505050600033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600090505b8151811015611b0c573373ffffffffffffffffffffffffffffffffffffffff1682828151811015156117c857fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415611afe57600093505b600b80549050841015611973573373ffffffffffffffffffffffffffffffffffffffff16600b8581548110151561182657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561196557600b6001600b805490500381548110151561188657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600b858154811015156118d857fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600b6001600b805490500381548110151561191e57fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560076000815480929190600190039190505550611973565b5b83806001019450506117f3565b600092505b600c80549050831015611af8573373ffffffffffffffffffffffffffffffffffffffff16600c848154811015156119ab57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611aea57600c6001600c8054905003815481101515611a0b57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600c84815481101515611a5d57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600c6001600c8054905003815481101515611aa357fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560086000815480929190600190039190505550611af8565b5b8280600101935050611978565b5b611e9f565b5b808060010191505061179a565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611e5057600093505b600b80549050841015611cc5573373ffffffffffffffffffffffffffffffffffffffff16600b85815481101515611b7857fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611cb757600b6001600b8054905003815481101515611bd857fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600b85815481101515611c2a57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600b6001600b8054905003815481101515611c7057fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560076000815480929190600190039190505550611cc5565b5b8380600101945050611b45565b600092505b600c80549050831015611e4a573373ffffffffffffffffffffffffffffffffffffffff16600c84815481101515611cfd57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611e3c57600c6001600c8054905003815481101515611d5d57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600c84815481101515611daf57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165050600c6001600c8054905003815481101515611df557fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560086000815480929190600190039190505550611e4a565b5b8280600101935050611cca565b5b611e9f565b6000341115611e9e573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f193505050501515611e9d5760006000fd5b5b5b50505050565b600c805480602002602001604051908101604052809291908181526020018280548015611f2757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611edd575b5050505050600033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600090505b8151811015611fff573373ffffffffffffffffffffffffffffffffffffffff168282815181101515611fa257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415611ff157826006541380611fd9575082600554135b15611fe45760006000fd5b826004819055505b6120ab565b5b8080600101915050611f74565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561205c57826006541380612044575082600554135b1561204f5760006000fd5b826004819055505b6120ab565b60003411156120aa573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156120a95760006000fd5b5b5b505050565b3373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561214257600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156121865760006000fd5b5b565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c80548060200260200160405190810160405280929190818152602001828054801561223357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116121e9575b5050505050600033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600090505b81518110156123fc573373ffffffffffffffffffffffffffffffffffffffff1682828151811015156122ae57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614156123ee576122dd846103eb565b600092505b600c80549050831015612372578373ffffffffffffffffffffffffffffffffffffffff16600c8481548110151561231557fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156123645760006000fd5b5b82806001019350506122e2565b600c80548060010182816123869190612997565b916000526020600020900160005b86909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506008600081548092919060010191905055505b612599565b5b8080600101915050612280565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561254a57612439846103eb565b600092505b600c805490508310156124ce578373ffffffffffffffffffffffffffffffffffffffff16600c8481548110151561247157fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156124c05760006000fd5b5b828060010193505061243e565b600c80548060010182816124e29190612997565b916000526020600020900160005b86909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506008600081548092919060010191905055505b612599565b6000341115612598573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156125975760006000fd5b5b5b50505050565b6000600c80548060200260200160405190810160405280929190818152602001828054801561262357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116125d9575b5050505050600033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600090505b815181101561277d573373ffffffffffffffffffffffffffffffffffffffff16828281518110151561269e57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141561276f57600084131580156126da57506004548460065401135b156126e55760006000fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc662386f26fc1000086029081150290604051809050600060405180830381858888f1935050505015156127545760006000fd5b8360066000828254019250508190555060065492505b6128ab565b5b8080600101915050612670565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561285c57600084131580156127c757506004548460065401135b156127d25760006000fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc662386f26fc1000086029081150290604051809050600060405180830381858888f1935050505015156128415760006000fd5b8360066000828254019250508190555060065492505b6128ab565b60003411156128aa573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156128a95760006000fd5b5b5b5050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561291157806001819055505b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156129555760006000fd5b5b50565b60065481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60085481565b60075481565b8154818355818115116129be578183600052602060002091820191016129bd91906129c3565b5b505050565b6129e591905b808211156129e15760008160009055506001016129c9565b5090565b905600a165627a7a72305820a05e3e939705faa4e0c32d0da223f5879857c2e20e789ece992edfc9e3bd20430029";

    private Vending(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    private Vending(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public Future<TransactionReceipt> add(Address user) {
        Function function = new Function("add", Arrays.<Type>asList(user), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> removeAdmin(Address admin) {
        Function function = new Function("removeAdmin", Arrays.<Type>asList(admin), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> pay() {
        Function function = new Function("pay", Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> setMinStock(Int256 newStock) {
        Function function = new Function("setMinStock", Arrays.<Type>asList(newStock), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> remove(Address user) {
        Function function = new Function("remove", Arrays.<Type>asList(user), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> deleteAccount() {
        Function function = new Function("deleteAccount", Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> setMaxStock(Int256 newStock) {
        Function function = new Function("setMaxStock", Arrays.<Type>asList(newStock), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> kill() {
        Function function = new Function("kill", Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Address> sender() {
        Function function = new Function("sender", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> addAdmin(Address admin) {
        Function function = new Function("addAdmin", Arrays.<Type>asList(admin), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> stockUp(Int256 amount) {
        Function function = new Function("stockUp", Arrays.<Type>asList(amount), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> setPrice(Uint256 newPrice) {
        Function function = new Function("setPrice", Arrays.<Type>asList(newPrice), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Int256> stock() {
        Function function = new Function("stock", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Address> thisAdress() {
        Function function = new Function("thisAdress", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> finneyPrice() {
        Function function = new Function("finneyPrice", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Int256> adminUsers() {
        Function function = new Function("adminUsers", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Int256> users() {
        Function function = new Function("users", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public static Future<Vending> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialValue) {
        return deployAsync(Vending.class, web3j, credentials, gasPrice, gasLimit, BINARY, "", initialValue);
    }

    public static Future<Vending> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialValue) {
        return deployAsync(Vending.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "", initialValue);
    }

    public static Vending load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Vending(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static Vending load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Vending(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
